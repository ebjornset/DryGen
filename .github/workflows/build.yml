# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [SonarCloudGitHubActions (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_build --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: build

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dummy:
        description: "dummy"
        required: false

jobs:
  ubuntu-latest:
    name: ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup .Net 3.1.*
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.*
      - name: Setup .Net 6.0.*
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.*
      - name: Setup JDK v 11 (for SonarCloud)
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Install/Update SonarCloud scanner
        run:
          dotnet tool update dotnet-sonarscanner --global
      - name: Install/Update Coverlet Report Generator (for SonarCloud)
        run:
          dotnet tool update dotnet-reportgenerator-globaltool --global
      - name: Begin SonarCloud scan
        run:
          dotnet-sonarscanner begin /k:"ebjornset_DryGen" /o:"ebjornset" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.coverageReportPaths="./.sonarqubecoverage/SonarQube.xml"
      - name: Cache .nuke/temp, ~/.nuget/packages
        uses: actions/cache@v2
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('global.json', 'src/**/*.csproj') }}
      - name: Run './build.cmd Clean UTests ITests Docs Specs'
        run: ./build.cmd Clean UTests ITests Docs Specs
        env:
          dummy: ${{ github.event.inputs.dummy }}
      - name: Check if there is any git changes
        id: get_changes
        run: echo "::set-output name=changed::$(git status --porcelain | wc - l)"
      - name: Fail if there is any git changes
        if: steps.get_changes.outputs.changed != 0
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Git modification found after [nuke]. Maybe [nuke docs] wasn't performed before commit?')
      - name: Run Coverlet Report Generator (for SonarCloud)
        run:
          reportgenerator "-reports:**/TestResults/**/coverage.cobertura.xml" "-targetdir:.sonarqubecoverage" "-reporttypes:SonarQube"
      - name: End SonarCloud scan
        run:
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
