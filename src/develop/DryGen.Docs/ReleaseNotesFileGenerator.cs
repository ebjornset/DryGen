using System.IO;

namespace DryGen.Docs;

public static class ReleaseNotesFileGenerator
{
	public static void Generate(string rootDirectory, string fileName)
	{
		var sourceFile = Path.Combine(rootDirectory.AsTemplatesReleaseNotesDirectory().AsRelativePathOf(rootDirectory), fileName).AsLinuxPath();
		var fileContent = File.ReadAllText(Path.Combine(rootDirectory.AsTemplatesReleaseNotesDirectory(), fileName))
			.Replace(DocsConstants.ReplaceTokenForReleaseNotestHeader, GetReleaseNotestHeader());
		File.WriteAllText(Path.Combine(rootDirectory.AsGeneratedReleaseNotesDirectoryCreated(), GetOutputFileName()), fileContent);

		string GetReleaseNotestHeader()
		{
			var releaseDate = fileName[0..10];
			var versionNumber = Path.GetFileNameWithoutExtension(fileName[13..]);
			return $"""
				---
				# {DocsConstants.AutoGeneratedNotice}
				# Source file: "{sourceFile}"
				---
				# Version {versionNumber}
				**Release date {releaseDate}**

				""";
		}

		string GetOutputFileName()
		{
			return fileName[11..].ToLowerInvariant();
		}
	}
}