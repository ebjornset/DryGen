<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFrameworks>net6.0;net7.0</TargetFrameworks>
		<ImplicitUsings>false</ImplicitUsings>
		<PackAsTool>true</PackAsTool>
		<ToolCommandName>dry-gen</ToolCommandName>
		<PackageId>dry-gen</PackageId>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<ItemGroup>
		<None Include="Properties\README.md" Pack="true" PackagePath="\" />
	</ItemGroup>
	
	<ItemGroup>
		<PackageReference Include="CommandLineParser" Version="2.9.1" />
		<PackageReference Include="YamlDotNet" Version="13.0.2" />
		<!-- 
		NB! We need to reference Microsoft.Extensions.Primitives for each supported .Net version here.
		Otherwise the loading of EF Core assemblies migth fail with an error that Microsoft.Extensions.Primitives v X.0.0.0 can't be loaded.
		This happens if a DryGen dependency is referencing and loading an older version of Microsoft.Extensions.Primitives,
		since the .Net runtime can't load two versions of the same assembly.
		-->
		<PackageReference Include="Microsoft.Extensions.Primitives" Version="[7.*,8.0)" Condition="'$(TargetFramework)' == 'net7.0'" />
		<PackageReference Include="Microsoft.Extensions.Primitives" Version="[6.*,7.0)" Condition="'$(TargetFramework)' == 'net6.0'" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\DryGen.Core\DryGen.Core.csproj" />
		<ProjectReference Include="..\DryGen.MermaidFromDotnetDepsJson\DryGen.MermaidFromDotnetDepsJson.csproj" />
		<ProjectReference Include="..\DryGen.MermaidFromJsonSchema\DryGen.MermaidFromJsonSchema.csproj" />
		<ProjectReference Include="..\DryGen.CSharpFromJsonSchema\DryGen.CSharpFromJsonSchema.csproj" />
		<ProjectReference Include="..\DryGen.MermaidFromCSharp\DryGen.MermaidFromCSharp.csproj" />
		<ProjectReference Include="..\DryGen.MermaidFromEfCore\DryGen.MermaidFromEfCore.csproj" />
	</ItemGroup>

</Project>
